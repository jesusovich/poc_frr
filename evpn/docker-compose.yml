---
version: "3"
networks:
  spine1_leaf1:
    enable_ipv6: false
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.1.1.0/24
  spine1_leaf2:
    enable_ipv6: false
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.1.2.0/24
  spine1_leaf3:
    enable_ipv6: false
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.1.3.0/24
  spine1_leaf4:
    enable_ipv6: false
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.1.4.0/24
  spine2_leaf1:
    enable_ipv6: false
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.2.1.0/24
  spine2_leaf2:
    enable_ipv6: false
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.2.2.0/24
  spine2_leaf3:
    enable_ipv6: false
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.2.3.0/24
  spine2_leaf4:
    enable_ipv6: false
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.2.4.0/24
  leaf1_server1:
    enable_ipv6: false
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.31.1.0/24
  leaf2_server2:
    enable_ipv6: false
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.31.2.0/24
services:
  spine1:
    privileged: true
    image: frrouting/frr:latest
    container_name: spine1
    restart: always
    volumes:
      - $PWD/devices/spine1:/etc/frr:rw
    entrypoint:
      - bash
      - -c
      - |
        echo 'net.mpls.conf.lo.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.conf.eth0.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.conf.eth1.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.conf.eth2.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.conf.eth3.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.platform_labels = 100000' >> /etc/sysctl.conf
        sysctl -p
        /sbin/tini -- /usr/lib/frr/docker-start
    networks:
      spine1_leaf1:
        ipv4_address: 10.1.1.11
      spine1_leaf2:
        ipv4_address: 10.1.2.11
      spine1_leaf3:
        ipv4_address: 10.1.3.11
      spine1_leaf4:
        ipv4_address: 10.1.4.11
  spine2:
    privileged: true
    image: frrouting/frr:latest
    container_name: spine2
    restart: always
    volumes:
      - $PWD/devices/spine2:/etc/frr:rw
    entrypoint:
      - bash
      - -c
      - |
        echo 'net.mpls.conf.lo.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.conf.eth0.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.conf.eth1.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.conf.eth2.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.conf.eth3.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.platform_labels = 100000' >> /etc/sysctl.conf
        sysctl -p
        /sbin/tini -- /usr/lib/frr/docker-start
    networks:
      spine2_leaf1:
        ipv4_address: 10.2.1.12
      spine2_leaf2:
        ipv4_address: 10.2.2.12
      spine2_leaf3:
        ipv4_address: 10.2.3.12
      spine2_leaf4:
        ipv4_address: 10.2.4.12
  leaf1:
    privileged: true
    image: frrouting/frr:latest
    container_name: leaf1
    restart: always
    volumes:
      - $PWD/devices/leaf1:/etc/frr:rw
    entrypoint:
      - bash
      - -c
      - |
        echo 'net.mpls.conf.lo.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.conf.eth1.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.conf.eth2.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.platform_labels = 100000' >> /etc/sysctl.conf
        sysctl -p
        !
        ip addr add 10.10.10.21/32 dev lo
        !
        ip link add dev DATA1 type vrf table 200
        ip link set dev DATA1 up
        ip link add br100 type bridge
        ip link set br100 master DATA1
        ip link set br100 addr aa:bb:cc:00:01:64
        ip link add vni100 type vxlan local 10.10.10.21 dstport 4789 id 100 nolearning
        ip link set vni100 master br100
        ip link set vni100 type bridge_slave neigh_suppress on learning off
        ip link set vni100 up
        ip link set br100 up
        !
        ip link add br110 type bridge
        ip link set br110 master DATA1
        ip link set br110 addr aa:bb:cc:00:01:6e
        ip addr add 10.201.1.21/24 dev br110
        ip link add vni110 type vxlan local 10.10.10.21 dstport 4789 id 110 nolearning
        ip link set vni110 master br110
        ip link set vni110 type bridge_slave neigh_suppress on learning off
        ip link set vni110 up
        ip link set br110 up
        ip link add link eth0 name eth0.110 type vlan id 110
        ip link set eth0.110 master br110
        ip link set eth0.110 up
        !
        ip link add br120 type bridge
        ip link set br120 master DATA1
        ip link set br120 addr aa:bb:cc:00:01:3f
        ip addr add 10.201.2.21/24 dev br120
        ip link add vni120 type vxlan local 10.10.10.21 dstport 4789 id 120 nolearning
        ip link set vni120 master br120
        ip link set vni120 type bridge_slave neigh_suppress on learning off
        ip link set vni120 up
        ip link set br120 up
        ip link add link eth0 name eth0.120 type vlan id 120
        ip link set eth0.120 master br120
        ip link set eth0.120 up
        !
        /sbin/tini -- /usr/lib/frr/docker-start
    networks:
      spine1_leaf1:
        ipv4_address: 10.1.1.21
      spine2_leaf1:
        ipv4_address: 10.2.1.21
      leaf1_server1:
        ipv4_address: 172.31.1.21
  leaf2:
    privileged: true
    image: frrouting/frr:latest
    container_name: leaf2
    restart: always
    volumes:
      - $PWD/devices/leaf2:/etc/frr:rw
    entrypoint:
      - bash
      - -c
      - |
        echo 'net.mpls.conf.lo.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.conf.eth1.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.conf.eth2.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.platform_labels = 100000' >> /etc/sysctl.conf
        sysctl -p
        !
        ip addr add 10.10.10.22/32 dev lo
        !
        ip link add dev DATA1 type vrf table 200
        ip link set dev DATA1 up
        ip link add br100 type bridge
        ip link set br100 master DATA1
        ip link set br100 addr aa:bb:cc:00:02:64
        ip link add vni100 type vxlan local 10.10.10.22 dstport 4789 id 100 nolearning
        ip link set vni100 master br100
        ip link set vni100 type bridge_slave neigh_suppress on learning off
        ip link set vni100 up
        ip link set br100 up
        !
        ip link add br110 type bridge
        ip link set br110 master DATA1
        ip link set br110 addr aa:bb:cc:00:02:6e
        ip addr add 10.201.1.22/24 dev br110
        ip link add vni110 type vxlan local 10.10.10.22 dstport 4789 id 110 nolearning
        ip link set vni110 master br110
        ip link set vni110 type bridge_slave neigh_suppress on learning off
        ip link set vni110 up
        ip link set br110 up
        ip link add link eth0 name eth0.110 type vlan id 110
        ip link set eth0.110 master br110
        ip link set eth0.110 up
        !
        ip link add br120 type bridge
        ip link set br120 master DATA1
        ip link set br120 addr aa:bb:cc:00:02:3f
        ip addr add 10.201.2.22/24 dev br120
        ip link add vni120 type vxlan local 10.10.10.22 dstport 4789 id 120 nolearning
        ip link set vni120 master br120
        ip link set vni120 type bridge_slave neigh_suppress on learning off
        ip link set vni120 up
        ip link set br120 up
        ip link add link eth0 name eth0.120 type vlan id 120
        ip link set eth0.120 master br120
        ip link set eth0.120 up
        !
        /sbin/tini -- /usr/lib/frr/docker-start
    networks:
      spine1_leaf2:
        ipv4_address: 10.1.2.22
      spine2_leaf2:
        ipv4_address: 10.2.2.22
      leaf2_server2:
        ipv4_address: 172.31.2.22
  leaf3:
    privileged: true
    image: frrouting/frr:latest
    container_name: leaf3
    restart: always
    volumes:
      - $PWD/devices/leaf3:/etc/frr:rw
    entrypoint:
      - bash
      - -c
      - |
        echo 'net.mpls.conf.lo.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.conf.eth0.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.conf.eth1.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.platform_labels = 100000' >> /etc/sysctl.conf
        sysctl -p
        /sbin/tini -- /usr/lib/frr/docker-start
    networks:
      spine1_leaf3:
        ipv4_address: 10.1.3.23
      spine2_leaf3:
        ipv4_address: 10.2.3.23
  leaf4:
    privileged: true
    image: frrouting/frr:latest
    container_name: leaf4
    restart: always
    volumes:
      - $PWD/devices/leaf4:/etc/frr:rw
    entrypoint:
      - bash
      - -c
      - |
        echo 'net.mpls.conf.lo.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.conf.eth0.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.conf.eth1.input = 1' >> /etc/sysctl.conf
        echo 'net.mpls.platform_labels = 100000' >> /etc/sysctl.conf
        sysctl -p
        /sbin/tini -- /usr/lib/frr/docker-start
    networks:
      spine1_leaf4:
        ipv4_address: 10.1.4.24
      spine2_leaf4:
        ipv4_address: 10.2.4.24
  server1:
    image: busybox:latest
    container_name: server1
    restart: always
    cap_add:
      - NET_ADMIN
    command:
      - sh
      - -c
      - |
        ip addr del 172.31.2.32 dev eth0
        ip link add link eth0 name eth0.110 type vlan id 110
        ip link set eth0.110 up
        ip addr add 10.201.1.31/24 dev eth0.110
        ip link add link eth0 name eth0.120 type vlan id 120
        ip link set eth0.120 up
        ip addr add 10.201.2.31/24 dev eth0.120
        ip route add default via 10.201.1.1 dev eth0.110
        tail -f /dev/null
    networks:
      leaf1_server1:
        ipv4_address: 172.31.1.31
  server2:
    image: busybox:latest
    container_name: server2
    restart: always
    cap_add:
      - NET_ADMIN
    command:
      - sh
      - -c
      - |
        ip addr del 172.31.2.32 dev eth0
        ip link add link eth0 name eth0.110 type vlan id 110
        ip link set eth0.110 up
        ip addr add 10.201.1.32/24 dev eth0.110
        ip link add link eth0 name eth0.120 type vlan id 120
        ip link set eth0.120 up
        ip addr add 10.201.2.32/24 dev eth0.120
        ip route add default via 10.201.1.1 dev eth0.110
        tail -f /dev/null
    networks:
      leaf2_server2:
        ipv4_address: 172.31.2.32